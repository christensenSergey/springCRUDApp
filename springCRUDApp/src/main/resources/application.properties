server.port=8080

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

#HHLooks like bug https://hibernate.atlassian.net/browse/HHH-12368
#They recommended set property (I believe it's the best workaround):
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.datasource.url=jdbc:postgresql://192.168.88.100/crudappdb
spring.datasource.username= postgres
spring.datasource.password= admin
spring.jpa.generate-ddl=true
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect

# JSP 
spring.mvc.view.prefix: /WEB-INF/views/
spring.mvc.view.suffix: .jsp